file_rules = [
# (* ::Subsection::Closed:: *) 
# (* 1.1.1.2 (a+b x)^m (c+d x)^n *) 
@rule ∫(((~a) + (~!b)*(~x))^(~!m)*((~c) + (~!d)*(~x)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m)) && isequal((~a)*(~d) - (~b)*(~c)*((~m) + 2), 0) ? (~d)*(~x)*((~a) + (~b)*(~x))^((~m) + 1)/((~b)*((~m) + 2)) : nothing # 1_1_1_2_1
@rule ∫(1/(((~a) + (~!b)*(~x))*((~c) + (~!d)*(~x))),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) ? ∫(1/((~a)*(~c) + (~b)*(~d)*(~x)^2), (~x)) : nothing # 1_1_1_2_2
@rule ∫(1/(((~!a) + (~!b)*(~x))*((~!c) + (~!d)*(~x))),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) ? (~b)/((~b)*(~c) - (~a)*(~d))*∫(1/((~a) + (~b)*(~x)), (~x)) - (~d)/((~b)*(~c) - (~a)*(~d))*∫(1/((~c) + (~d)*(~x)), (~x)) : nothing # 1_1_1_2_3
@rule ∫(((~!a) + (~!b)*(~x))^(~!m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && isequal((~m) + (~n) + 2, 0) && !isequal((~m), -1) ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) + 1)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1)) : nothing # 1_1_1_2_4
@rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) && is_greater_than((~m) + 1/2, 0) ? (~x)*((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~m)/(2*(~m) + 1) + 2*(~a)*(~c)*(~m)/(2*(~m) + 1)*∫(((~a) + (~b)*(~x))^((~m) - 1)*((~c) + (~d)*(~x))^((~m) - 1), (~x)) : nothing # 1_1_1_2_5
@rule ∫(1/(((~a) + (~!b)*(~x))^(3/2)*((~c) + (~!d)*(~x))^(3/2)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) ? (~x)/((~a)*(~c)*sqrt((~a) + (~b)*(~x))*sqrt((~c) + (~d)*(~x))) : nothing # 1_1_1_2_6
@rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) && ILtQ[(~m) + 3/2, 0] ? -(~x)*((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~m) + 1)/(2*(~a)*(~c)*((~m) + 1)) + (2*(~m) + 3)/(2*(~a)*(~c)*((~m) + 1))* ∫(((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~m) + 1), (~x)) : nothing # 1_1_1_2_7
# @rule ∫(((~a) + (~!b)*(~x))^(~!m)*((~c) + (~!d)*(~x))^(~!m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m)) && isequal((~b)*(~c) + (~a)*(~d), 0) && (isa((~m), Integer) || GtQ[(~a), 0] && GtQ[(~c), 0]) ? ∫(((~a)*(~c) + (~b)*(~d)*(~x)^2)^(~m), (~x)) : nothing # 1_1_1_2_8
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m)) && isequal((~b)*(~c) + (~a)*(~d), 0) && !(isa(2*(~m), Integer)) ? ((~a) + (~b)*(~x))^ FracPart[(~m))*((~c) + (~d)*(~x))^FracPart[(~m))/((~a)*(~c) + (~b)*(~d)*(~x)^2)^FracPart[(~m))* ∫(((~a)*(~c) + (~b)*(~d)*(~x)^2)^(~m), (~x)) : nothing # 1_1_1_2_9
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && ILtQ[(~m), -1] && !(isa((~n), Integer)) && GtQ[(~n), 0] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n)/((~b)*((~m) + 1)) - (~d)*(~n)/((~b)*((~m) + 1))*∫(((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) - 1), (~x)) : nothing # 1_1_1_2_10
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && ILtQ[(~m), -1] && !(isa((~n), Integer)) && LtQ[(~n), 0] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) + 1)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1)) - (~d)*((~m) + (~n) + 2)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1))* ∫(((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n), (~x)) : nothing # 1_1_1_2_11
# @rule ∫(((~!a) + (~!b)*(~x))^(~!m)*((~!c) + (~!d)*(~x))^(~!n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && is_greater_than((~m), 0) && (!(isa((~n), Integer)) || isequal((~c), 0) && LeQ[7*(~m) + 4*(~n) + 4, 0] || LtQ[9*(~m) + 5*((~n) + 1), 0] || GtQ[(~m) + (~n) + 2, 0]) ? ∫(ExpandIntegrand[((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~n), (~x)), (~x)) : nothing # 1_1_1_2_12
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~!n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && ILtQ[(~m), 0] && isa((~n), Integer) && !(is_greater_than((~n), 0) && LtQ[(~m) + (~n) + 2, 0)] ? ∫(ExpandIntegrand[((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~n), (~x)), (~x)) : nothing # 1_1_1_2_13
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && ILtQ[Simplify[(~m) + (~n) + 2], 0] && !isequal((~m), -1) && !( LtQ[(~m), -1) && LtQ[(~n), -1] && (isequal((~a), 0) || !isequal((~c), 0) && LtQ[(~m) - (~n), 0] && isa((~n), Integer))] && (SumSimplerQ[(~m), 1] || !(SumSimplerQ[(~n), 1)]) ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) + 1)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1)) - (~d)*Simplify[(~m) + (~n) + 2)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1))* ∫(((~a) + (~b)*(~x))^Simplify[(~m) + 1)*((~c) + (~d)*(~x))^(~n), (~x)) : nothing # 1_1_1_2_14
# @rule ∫(1/(((~a) + (~!b)*(~x))^(9/4)*((~c) + (~!d)*(~x))^(1/4)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) && NegQ[(~a)^2*(~b)^2] ? -4/(5*(~b)*((~a) + (~b)*(~x))^(5/4)*((~c) + (~d)*(~x))^(1/4)) - (~d)/(5*(~b))*∫(1/(((~a) + (~b)*(~x))^(5/4)*((~c) + (~d)*(~x))^(5/4)), (~x)) : nothing # 1_1_1_2_15
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && GtQ[(~n), 0] && LtQ[(~m), -1] && !(isa((~n), Integer) && Not[isa((~m), Integer))] && !( ILeQ[(~m) + (~n) + 2, 0) && (FractionQ[(~m)] || GeQ[2*(~n) + (~m) + 1, 0])] && Intlinear_expansion((~a), ~(~x))[3] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n)/((~b)*((~m) + 1)) - (~d)*(~n)/((~b)*((~m) + 1))*∫(((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) - 1), (~x)) : nothing # 1_1_1_2_16
# @rule ∫(1/(((~a) + (~!b)*(~x))^(5/4)*((~c) + (~!d)*(~x))^(1/4)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) && NegQ[(~a)^2*(~b)^2] ? -2/((~b)*((~a) + (~b)*(~x))^(1/4)*((~c) + (~d)*(~x))^(1/4)) + (~c)*∫(1/(((~a) + (~b)*(~x))^(5/4)*((~c) + (~d)*(~x))^(5/4)), (~x)) : nothing # 1_1_1_2_17
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b)*(~c) + (~a)*(~d), 0) && is_greater_than((~m) + 1/2, 0) && is_greater_than((~n) + 1/2, 0) && LtQ[(~m), (~n)] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n)/((~b)*((~m) + (~n) + 1)) + 2*(~c)*(~n)/((~m) + (~n) + 1)*∫(((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^((~n) - 1), (~x)) : nothing # 1_1_1_2_18
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && GtQ[(~n), 0] && !isequal((~m) + (~n) + 1, 0) && !( is_greater_than((~m), 0) && (Not[isa((~n), Integer)) || GtQ[(~m), 0] && LtQ[(~m) - (~n), 0])] && !(ILtQ[(~m) + (~n) + 2, 0)] && Intlinear_expansion((~a), ~(~x))[3] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n)/((~b)*((~m) + (~n) + 1)) + (~n)*((~b)*(~c) - (~a)*(~d))/((~b)*((~m) + (~n) + 1))* ∫(((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^((~n) - 1), (~x)) : nothing # 1_1_1_2_19
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && LtQ[(~m), -1] && !( LtQ[(~n), -1) && (isequal((~a), 0) || !isequal((~c), 0) && LtQ[(~m) - (~n), 0] && isa((~n), Integer))] && Intlinear_expansion((~a), ~(~x))[3] ? ((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^((~n) + 1)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1)) - (~d)*((~m) + (~n) + 2)/(((~b)*(~c) - (~a)*(~d))*((~m) + 1))* ∫(((~a) + (~b)*(~x))^((~m) + 1)*((~c) + (~d)*(~x))^(~n), (~x)) : nothing # 1_1_1_2_20
# @rule ∫(1/(Sqrt[(~a) + (~!b)*(~x)]*Sqrt[(~c) + (~!d)*(~x)]),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~a) + (~c), 0) && isequal((~b) - (~d), 0) && GtQ[(~a), 0] ? ArcCosh[(~b)*(~x)/(~a))/(~b) : nothing # 1_1_1_2_21
# @rule ∫(1/(Sqrt[(~a) + (~!b)*(~x)]*Sqrt[(~!c) + (~!d)*(~x)]),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && isequal((~b) + (~d), 0) && GtQ[(~a) + (~c), 0] ? ∫(1/sqrt((~a)*(~c) - (~b)*((~a) - (~c))*(~x) - (~b)^2*(~x)^2), (~x)) : nothing # 1_1_1_2_22
# @rule ∫(1/(Sqrt[(~!a) + (~!b)*(~x)]*Sqrt[(~!c) + (~!d)*(~x)]),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && GtQ[(~b)*(~c) - (~a)*(~d), 0] && GtQ[(~b), 0] ? 2/sqrt((~b))* substitute(∫(1/sqrt((~b)*(~c) - (~a)*(~d) + (~d)*(~x)^2), (~x)), (~x) => sqrt((~a) + (~b)*(~x))) : nothing # 1_1_1_2_23
# @rule ∫(1/(((~!a) + (~!b)*(~x))*((~!c) + (~!d)*(~x))^(1/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && PosQ[((~b)*(~c) - (~a)*(~d))/(~b)] ? With[{(~q) = Rt[((~b)*(~c) - (~a)*(~d))/(~b), 3)}, -log((~a) + (~b)*(~x))/(2*(~b)*(~q)) - 3/(2*(~b)*(~q))*substitute(∫(1/((~q) - (~x)), (~x)), (~x) => ((~c) + (~d)*(~x))^(1/3)) + 3/(2*(~b))* Subst[∫(1/((~q)^2 + (~q)*(~x) + (~x)^2), (~x))) : nothing # 1_1_1_2_24
# @rule ∫(1/(((~!a) + (~!b)*(~x))*((~!c) + (~!d)*(~x))^(1/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && NegQ[((~b)*(~c) - (~a)*(~d))/(~b)] ? With[{(~q) = Rt[-((~b)*(~c) - (~a)*(~d))/(~b), 3)}, log((~a) + (~b)*(~x))/(2*(~b)*(~q)) - 3/(2*(~b)*(~q))*substitute(∫(1/((~q) + (~x)), (~x)), (~x) => ((~c) + (~d)*(~x))^(1/3)) + 3/(2*(~b))* Subst[∫(1/((~q)^2 - (~q)*(~x) + (~x)^2), (~x))) : nothing # 1_1_1_2_25
# @rule ∫(1/(((~!a) + (~!b)*(~x))*((~!c) + (~!d)*(~x))^(2/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && PosQ[((~b)*(~c) - (~a)*(~d))/(~b)] ? With[{(~q) = Rt[((~b)*(~c) - (~a)*(~d))/(~b), 3)}, -log((~a) + (~b)*(~x))/(2*(~b)*(~q)^2) - 3/(2*(~b)*(~q)^2)*substitute(∫(1/((~q) - (~x)), (~x)), (~x) => ((~c) + (~d)*(~x))^(1/3)) - 3/(2*(~b)*(~q))* Subst[∫(1/((~q)^2 + (~q)*(~x) + (~x)^2), (~x))) : nothing # 1_1_1_2_26
# @rule ∫(1/(((~!a) + (~!b)*(~x))*((~!c) + (~!d)*(~x))^(2/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && NegQ[((~b)*(~c) - (~a)*(~d))/(~b)] ? With[{(~q) = Rt[-((~b)*(~c) - (~a)*(~d))/(~b), 3)}, -log((~a) + (~b)*(~x))/(2*(~b)*(~q)^2) + 3/(2*(~b)*(~q)^2)*substitute(∫(1/((~q) + (~x)), (~x)), (~x) => ((~c) + (~d)*(~x))^(1/3)) + 3/(2*(~b)*(~q))* Subst[∫(1/((~q)^2 - (~q)*(~x) + (~x)^2), (~x))) : nothing # 1_1_1_2_27
# @rule ∫(1/(((~!a) + (~!b)*(~x))^(1/3)*((~!c) + (~!d)*(~x))^(2/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && PosQ[(~d)/(~b)] ? With[{(~q) = Rt[(~d)/(~b), 3)}, -sqrt(3)*(~q)/(~d)* ArcTan[2*(~q)*((~a) + (~b)*(~x))^(1/3)/(sqrt(3)*((~c) + (~d)*(~x))^(1/3)) + 1/sqrt(3)) - (~q)/(2*(~d))*log((~c) + (~d)*(~x)) - 3*(~q)/(2*(~d))*log((~q)*((~a) + (~b)*(~x))^(1/3)/((~c) + (~d)*(~x))^(1/3) - 1)) : nothing # 1_1_1_2_28
# @rule ∫(1/(((~!a) + (~!b)*(~x))^(1/3)*((~!c) + (~!d)*(~x))^(2/3)),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && NegQ[(~d)/(~b)] ? With[{(~q) = Rt[-(~d)/(~b), 3)}, sqrt(3)*(~q)/(~d)* ArcTan[1/sqrt(3) - 2*(~q)*((~a) + (~b)*(~x))^(1/3)/(sqrt(3)*((~c) + (~d)*(~x))^(1/3))) + (~q)/(2*(~d))*log((~c) + (~d)*(~x)) + 3*(~q)/(2*(~d))*log((~q)*((~a) + (~b)*(~x))^(1/3)/((~c) + (~d)*(~x))^(1/3) + 1)) : nothing # 1_1_1_2_29
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && LtQ[-1, (~m), 0] && LeQ[3, Denominator[(~m)], 4] && AtomQ[(~b)*(~c) + (~a)*(~d)] ? ((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~m)/((~a)*(~c) + ((~b)*(~c) + (~a)*(~d))*(~x) + (~b)*(~d)*(~x)^2)^(~m)* ∫(((~a)*(~c) + ((~b)*(~c) + (~a)*(~d))*(~x) + (~b)*(~d)*(~x)^2)^(~m), (~x)) : nothing # 1_1_1_2_30
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~m),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && LtQ[-1, (~m), 0] && LeQ[3, Denominator[(~m)], 4] ? ((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~m)/(((~a) + (~b)*(~x))*((~c) + (~d)*(~x)))^(~m)* ∫(((~a)*(~c) + ((~b)*(~c) + (~a)*(~d))*(~x) + (~b)*(~d)*(~x)^2)^(~m), (~x)) : nothing # 1_1_1_2_31
# @rule ∫(((~!a) + (~!b)*(~x))^(~m)*((~!c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && LtQ[-1, (~m), 0] && LeQ[-1, (~n), 0] && LeQ[Denominator[(~n)], Denominator[(~m)]] && Intlinear_expansion((~a), ~(~x))[3] ? With[{(~p) = Denominator[(~m))}, (~p)/(~b)* substitute(∫((~x)^((~p)*((~m) + 1) - 1)*((~c) - (~a)*(~d)/(~b) + (~d)*(~x)^(~p)/(~b))^(~n), (~x)), (~x) => ((~a) + (~b)*(~x))^(1/(~p)))) : nothing # 1_1_1_2_32
# @rule ∫(((~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~b), (~c), (~d), (~m), (~n)) && !(isa((~m), Integer)) && (isa((~n), Integer) || GtQ[(~c), 0] && !(isequal((~n), -1/2) && isequal((~c)^2 - (~d)^2, 0) && GtQ[-(~d)/((~b)*(~c)), 0)]) ? (~c)^(~n)*((~b)*(~x))^((~m) + 1)/((~b)*((~m) + 1))* Hypergeometric2F1[-(~n), (~m) + 1, (~m) + 2, -(~d)*(~x)/(~c)) : nothing # 1_1_1_2_33
# @rule ∫(((~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~b), (~c), (~d), (~m), (~n)) && !(isa((~n), Integer)) && (isa((~m), Integer) || GtQ[-(~d)/((~b)*(~c)), 0]) ? ((~c) + (~d)*(~x))^((~n) + 1)/((~d)*((~n) + 1)*(-(~d)/((~b)*(~c)))^(~m))* Hypergeometric2F1[-(~m), (~n) + 1, (~n) + 2, 1 + (~d)*(~x)/(~c)) : nothing # 1_1_1_2_34
# @rule ∫(((~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~b), (~c), (~d), (~m), (~n)) && !(isa((~m), Integer)) && !(isa((~n), Integer)) && !(GtQ[(~c), 0)] && !(GtQ[-(~d)/((~b)*(~c)), 0)] && (RationalQ[(~m)] && !(isequal((~n), -1/2) && isequal((~c)^2 - (~d)^2, 0)) || !(RationalQ[(~n))]) ? (~c)^IntPart[(~n))*((~c) + (~d)*(~x))^FracPart[(~n))/(1 + (~d)*(~x)/(~c))^FracPart[(~n))* ∫(((~b)*(~x))^(~m)*(1 + (~d)*(~x)/(~c))^(~n), (~x)) : nothing # 1_1_1_2_35
# @rule ∫(((~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~b), (~c), (~d), (~m), (~n)) && !(isa((~m), Integer)) && !(isa((~n), Integer)) && !(GtQ[(~c), 0)] && !(GtQ[-(~d)/((~b)*(~c)), 0)] ? (-(~b)*(~c)/(~d))^IntPart[(~m))*((~b)*(~x))^FracPart[(~m))/(-(~d)*(~x)/(~c))^FracPart[(~m))* ∫((-(~d)*(~x)/(~c))^(~m)*((~c) + (~d)*(~x))^(~n), (~x)) : nothing # 1_1_1_2_36
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && !(isa((~m), Integer)) && isa((~n), Integer) ? ((~b)*(~c) - (~a)*(~d))^(~n)*((~a) + (~b)*(~x))^((~m) + 1)/((~b)^((~n) + 1)*((~m) + 1))* Hypergeometric2F1[-(~n), (~m) + 1, (~m) + 2, -(~d)*((~a) + (~b)*(~x))/((~b)*(~c) - (~a)*(~d))) : nothing # 1_1_1_2_37
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && !(isa((~m), Integer)) && !(isa((~n), Integer)) && GtQ[(~b)/((~b)*(~c) - (~a)*(~d)), 0] && (RationalQ[(~m)] || !(RationalQ[(~n)) && GtQ[-(~d)/((~b)*(~c) - (~a)*(~d)), 0]]) ? ((~a) + (~b)*(~x))^((~m) + 1)/((~b)*((~m) + 1)*((~b)/((~b)*(~c) - (~a)*(~d)))^(~n))* Hypergeometric2F1[-(~n), (~m) + 1, (~m) + 2, -(~d)*((~a) + (~b)*(~x))/((~b)*(~c) - (~a)*(~d))) : nothing # 1_1_1_2_38
# @rule ∫(((~a) + (~!b)*(~x))^(~m)*((~c) + (~!d)*(~x))^(~n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m), (~n)) && !isequal((~b)*(~c) - (~a)*(~d), 0) && !(isa((~m), Integer)) && !(isa((~n), Integer)) && (RationalQ[(~m)] || !(SimplerQ[(~n) + 1, (~m) + 1)]) ? ((~c) + (~d)*(~x))^ FracPart[ (~n))/(((~b)/((~b)*(~c) - (~a)*(~d)))^IntPart[(~n))*((~b)*((~c) + (~d)*(~x))/((~b)*(~c) - (~a)*(~d)))^ FracPart[(~n)))* ∫(((~a) + (~b)*(~x))^(~m)*Simp[(~b)*(~c)/((~b)*(~c) - (~a)*(~d)) + (~b)*(~d)*(~x)/((~b)*(~c) - (~a)*(~d)), (~x))^(~n), (~x)) : nothing # 1_1_1_2_39
# @rule ∫(((~!a) + (~!b)*(~u))^(~!m)*((~!c) + (~!d)*(~u))^(~!n),(~x)) => !contains_int_var((~x), (~a), (~b), (~c), (~d), (~m), (~n)) && linear_expansion((~u), ~(~x))[3] && !isequal(Coefficient[(~u), (~x), 0), 0] ? 1/Symbolics.coeff((~u), (~x) ^ 1)* substitute(∫(((~a) + (~b)*(~x))^(~m)*((~c) + (~d)*(~x))^(~n), (~x)), (~x) => (~u)) : nothing # 1_1_1_2_40
# (* IntLinearQ[a,b,c,d,m,n,x] returns True iff (a+b*x)^m*(c+d*x)^n is  integrable wrt x in terms of non-hypergeometric functions. *) IntLinearQ[a_, b_, c_, d_, m_, n_, x_] := IGtQ[m, 0] || IGtQ[n, 0] || IntegersQ[3*m, 3*n] || IntegersQ[4*m, 4*n] || IntegersQ[2*m, 6*n] || IntegersQ[6*m, 2*n] || ILtQ[m + n, -1] || IntegerQ[m + n] && RationalQ[m] 
]
